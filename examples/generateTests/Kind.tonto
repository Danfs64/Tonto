module MarriageModule {
    kind Person

    relator SocialRelator
    relator SocialRelatorType specializes SocialRelator, Person
    relator Marriage (instanceOf SocialRelatorType) specializes SocialRelator {
        marriageStartDate: Date {const derived}
        isActive: boolean {ordered}
    }
    kind MarriageDuty
    relator MarriageRight specializes Marriage
    
    role Spouse specializes Person {
       (firstName) {const, ordered, derived} [2]  -- isBoundBy -- [1..*] (secondName) {const, ordered, derived} Marriage inverseOf involvesSpouse
       [2] -- isBoundByTest specializes involvesSpouse -- [1..*] Marriage
    }

    relation Marriage -- involvesSpouse -- [2..*] Spouse
    relation Marriage <>-- [1..*] MarriageDuty

    relation Marriage -- [2..*] Spouse
    relation Marriage <>-- [1..*] MarriageDuty

    relation Marriage <>-- [1..*] MarriageRight
}

module Testing {
    kind Testando
}