// Cada package representaria um contexto daquele modelo
module PersonHealth {

    category PhysicalObject

    kind Hearth specializes PhysicalObject 

    kind Brain specializes PhysicalObject

    phase FunctionalBrain specializes Brain
    phase NonFunctionalBrain specializes Brain

    kind Person specializes PhysicalObject {
        <>-- hasOneHearth <>-- [1] Hearth
        <>-- hasOneBrain <>-- [1] Brain
    }

    ref Person -- hasOneHearth -- [1] Hearth
    ref Person -- hasOneBrain -- [1] Brain

    phase DeceasedPerson specializes Person
    phase LivingPerson specializes Person

    disjoint complete genset personByLivingCondition {
        general Person
        specifics DeceasedPerson, LivingPerson 
    }

    mode Sympton

    role Patient specializes LivingPerson {
        @comparative -- isMoreCriticalThan -- Patient
        @comparative -- isLessCriticalThan -- Patient

        @material -- treatedIn -- [1..*] HealthCareSystem.HealhcareProvider
        
        @characterization -- hasSympton -- [1..*] Sympton
    }

    relator Treatment {
        @mediation --  [1..*] Patient
        @mediation -- offeredByProvider -- [1] HealthCareSystem.HealhcareProvider
    }
}

module HealthCareSystem {
    kind Organization

    phase ActiveOrganization specializes Organization

    phase ExtinctOrganization specializes Organization

    disjoint complete genset OrganizationByStatus {
        general Organization
        specifics ActiveOrganization, ExtinctOrganization
    }

    role HealhcareProvider specializes ActiveOrganization {
        @mediation -- providesTreatment -- [1..*] PersonHealth.Person
    }
}